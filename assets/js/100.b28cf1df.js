(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{1017:function(s,a,t){"use strict";t.r(a);var n=t(41),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[s._v("#")]),s._v(" webpack")]),s._v(" "),t("h2",{attrs:{id:"_1-原理简述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理简述"}},[s._v("#")]),s._v(" 1. 原理简述")]),s._v(" "),t("h3",{attrs:{id:"_1-核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-核心概念"}},[s._v("#")]),s._v(" 1.核心概念")]),s._v(" "),t("p",[s._v("javascript的模块"),t("strong",[s._v("打包工具")]),s._v("(model bundler),通过分析各个模块中间的依赖，最终将代码打包成一份或者多份代码包(bundler),供HTML直接使用，实际上webpack仅仅提供了"),t("strong",[s._v("打包功能")]),s._v("和"),t("strong",[s._v("文件处理机制")]),s._v(",然后通过生态的各种loader和plugin对代码进行预编译和打包.因此webpack具有很高的拓展性，能更好的发挥社区的力量")]),s._v(" "),t("ul",[t("li",[s._v("Entry:入口文件，webpack从该文件开始进行分析编译")]),s._v(" "),t("li",[s._v("Output:出口路径，打包后创建bundler的文件路径和文件名")]),s._v(" "),t("li",[s._v("Module:模块，在webpack中任何一个文件都可以看成模块,会根据配置的不同loader进行加载和打包")]),s._v(" "),t("li",[s._v("Chunk:代码块，可以根据配置将文件打包成一个或者多个代码块，以便按需加载提高性能")]),s._v(" "),t("li",[s._v("Loader:模块加载器,将各个类型的文件加载和转换")]),s._v(" "),t("li",[s._v("Plugin:拓展插件,可以通过webpack相应的事件钩子,介入到打包环境中的任意环节，对代码进行按需修改")])]),s._v(" "),t("h3",{attrs:{id:"_2-工作流程-加载-编译-输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-工作流程-加载-编译-输出"}},[s._v("#")]),s._v(" 2.工作流程(加载-编译-输出)")]),s._v(" "),t("ul",[t("li",[s._v("读取配置文件，按照命令"),t("strong",[s._v("初始化")]),s._v("参数，创建compiler对象")]),s._v(" "),t("li",[s._v("调用插件的apply方法"),t("strong",[s._v("挂载插件")]),s._v("进行监听，然后从入口文件开始编译")]),s._v(" "),t("li",[s._v("按照文件类型，调用相应的的loader对模板进行编译,并在合适的时机触发相应的事件，调用plugin执行，最后在根据模块"),t("strong",[s._v("依赖查找")]),s._v("所依赖的模块，递归执行第三步")]),s._v(" "),t("li",[s._v("将编译后的代码打包成一个个的代码块，并按依赖和配置确定"),t("strong",[s._v("输出内容")]),s._v("，这个步骤扔可以通过plugin进行文件修改")]),s._v(" "),t("li",[s._v("最后通过output把文件一一写入到指定文件中，完成打包过程")])]),s._v(" "),t("h2",{attrs:{id:"_2-loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-loader"}},[s._v("#")]),s._v(" 2.loader")]),s._v(" "),t("p",[s._v("由于webpack是基于Node,因此webpack只能识别js代码，那html/css/图片等类型的文件则无法加载，因此需要对"),t("strong",[s._v("不同格式文件转换器")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("exports")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("htmlSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回处理后的代码字符串")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 删除 html 文件中的所有注释")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" htmlSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\x3c!--[\\w\\W]*?--\x3e")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("当然，实际的 Loader 不会这么简单，通常是需要将代码进行分析，构建 AST (抽象语法树)， 遍历进行定向的修改后，再重新生成新的代码字符串\nBabel-loader 会执行以下步骤:")]),s._v(" "),t("ul",[t("li",[s._v("babylon 将 ES6/ES7 代码解析成 AST")]),s._v(" "),t("li",[s._v("babel-traverse 对 AST 进行遍历转译，得到新的 AST")]),s._v(" "),t("li",[s._v("新 AST 通过 babel-generator 转换成 ES5")])]),s._v(" "),t("h3",{attrs:{id:"_1-loader的特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-loader的特性"}},[s._v("#")]),s._v(" 1.loader的特性")]),s._v(" "),t("ul",[t("li",[s._v("链式传递 按照配置时相反的顺序链式执行")]),s._v(" "),t("li",[s._v("基于Node环境，拥有较高的权限，对文件的增删改查")]),s._v(" "),t("li",[s._v("可同步也可异步")])]),s._v(" "),t("h3",{attrs:{id:"_2-常用loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用loader"}},[s._v("#")]),s._v(" 2.常用loader")]),s._v(" "),t("ul",[t("li",[s._v("file-loader:加载文件资源，如字体/图片等，具有移动/复制/命名等功能")]),s._v(" "),t("li",[s._v("url-loader:通常用于加载图片，对小的图片转换成Date url，减少请求")]),s._v(" "),t("li",[s._v("babel-loader:加载js/jsx,将ES6/ES7转成es5，兼容性问题")]),s._v(" "),t("li",[s._v("ts-loader:加载ts/tsx，编译typescript")]),s._v(" "),t("li",[s._v("style-loader:将css已style标签的形式插入到HTML中")]),s._v(" "),t("li",[s._v("css-loader:分析@import和url(),引入css和对应的资源")]),s._v(" "),t("li",[s._v("less-loader/sass-loader:css预处理器")])]),s._v(" "),t("h3",{attrs:{id:"_3-编写原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-编写原则"}},[s._v("#")]),s._v(" 3.编写原则")]),s._v(" "),t("ul",[t("li",[s._v("单一原则:一个loader只做一件事")]),s._v(" "),t("li",[s._v("链式调用：webpack只会按照顺序链式调用每个loader")]),s._v(" "),t("li",[s._v("统一原则:遵循 Webpack 制定的设计规则和结构，输入与输出均为字符串，各个 Loader 完全独立，即插即用；")])]),s._v(" "),t("h2",{attrs:{id:"_3-plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-plugin"}},[s._v("#")]),s._v(" 3.Plugin")]),s._v(" "),t("ul",[t("li",[s._v("webpack 通过内部的事件流机制保证了插件的有序性，底层是利用发布订阅模式，webpack 在运行过程中会广播事件，插件只需要监听它所关心的事件，在特定的时机对资源做处理")]),s._v(" "),t("li",[s._v("一个简单的plugin")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Plugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注册插件时，会调用 apply 方法")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// apply 方法接收 compiler 对象")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过 compiler 上提供的 Api，可以对事件进行监听，执行相应的操作")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("compiler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  \t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// compilation 是监听每次编译循环")]),s._v("\n  \t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每次文件变化，都会生成新的 compilation 对象并触发该事件")]),s._v("\n    \tcompiler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("plugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'compilation'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("compilation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("ul",[t("li",[s._v("注册插件")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// webpack.config.js")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("export "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tplugins"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Plugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"_1-事件流机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-事件流机制"}},[s._v("#")]),s._v(" 1.事件流机制")]),s._v(" "),t("p",[s._v("webpack就像工厂中的流水线，经过loader和plugin处理，最后进输出结果")]),s._v(" "),t("ul",[t("li",[s._v("通过链式调用串起一个个loader")]),s._v(" "),t("li",[s._v("通过事件流机制,让plugin可以插入到整个生产过程中的每一个步骤\nwebpack事件流编程范式的核心是基础类Tapabel,是一种观察者模式的实现事件的订阅与广播")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" SyncHook "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tapable"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" hook "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SyncHook")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'arg'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 订阅")]),s._v("\nhook"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'event'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("arg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'event-hook'")]),s._v("\n\tconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 广播")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hook")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'event-hook'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("webpack中最重要的类Compiler和Compilation都继承自Tapable,也拥有这样的事件流机制")]),s._v(" "),t("ul",[t("li",[s._v("Compiler:可以简单的理解为webpack的实例,它包含了webpack中所有的配置信息，如option,loader和plugin等信息,全局唯一，只有在启动时完成初始化创建,随着声明周期逐一传递")]),s._v(" "),t("li",[s._v("Compilation:可以成为编译实例,当编译文件改变时,webpack可以创建一个新的compilation对象,开始新的一次编译。他包含了当前输入资源，输出资源，变化文件等，同时通过它提供的api，可以监听每次编译过程中触发的事件钩子")]),s._v(" "),t("li",[s._v("区别")])]),s._v(" "),t("ol",[t("li",[s._v("Compiler 全局唯一，且从启动生存到结束；")]),s._v(" "),t("li",[s._v("Compilation 对应每次编译，每轮编译循环均会重新创建；")])]),s._v(" "),t("h3",{attrs:{id:"_2-常用的plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用的plugin"}},[s._v("#")]),s._v(" 2.常用的plugin")]),s._v(" "),t("ul",[t("li",[s._v("UglifyJsPlugin: 压缩、混淆代码；")]),s._v(" "),t("li",[s._v("CommonsChunkPlugin: 代码分割；")]),s._v(" "),t("li",[s._v("ProvidePlugin: 自动加载模块；")]),s._v(" "),t("li",[s._v("html-webpack-plugin: 加载 html 文件，并引入 css / js 文件；")]),s._v(" "),t("li",[s._v("extract-text-webpack-plugin / mini-css-extract-plugin: 抽离样式，生成 css 文件；")]),s._v(" "),t("li",[s._v("DefinePlugin: 定义全局变量；")]),s._v(" "),t("li",[s._v("optimize-css-assets-webpack-plugin: CSS 代码去重；")]),s._v(" "),t("li",[s._v("webpack-bundle-analyzer: 代码分析；")]),s._v(" "),t("li",[s._v("compression-webpack-plugin: 使用 gzip 压缩 js 和 css；")]),s._v(" "),t("li",[s._v("happypack: 使用多进程，加速代码构建；")]),s._v(" "),t("li",[s._v("EnvironmentPlugin: 定义环境变量；")])]),s._v(" "),t("p",[s._v("链接："),t("a",{attrs:{href:"https://juejin.im/post/5cc26dfef265da037b611738",target:"_blank"}},[s._v("https://juejin.im/post/5cc26dfef265da037b611738")])]),s._v(" "),t("h2",{attrs:{id:"_4-热更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-热更新"}},[s._v("#")]),s._v(" 4. 热更新")]),s._v(" "),t("h3",{attrs:{id:"_1-什么是-webpack-热更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-webpack-热更新"}},[s._v("#")]),s._v(" 1.什么是 webpack 热更新？")]),s._v(" "),t("ul",[t("li",[s._v("开发过程中，代码发生变动后，webpack 会重新编译，编译后浏览器替换修改的模块，局部更新，无需刷新整个页面")]),s._v(" "),t("li",[s._v("好处：节省开发时间、提升开发体验")])]),s._v(" "),t("h3",{attrs:{id:"_2-热更新原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-热更新原理"}},[s._v("#")]),s._v(" 2.热更新原理")]),s._v(" "),t("p",[s._v("主要是通过websocket实现，建立本地服务和浏览器的双向通信。当代码变化，重新编译后，通知浏览器请求更新的模块，替换原有的模块")]),s._v(" "),t("ul",[t("li",[s._v("通过webpack-dev-server开启server服务，本地 server 启动之后，再去启动 websocket 服务，建立本地服务和浏览器的双向通信")]),s._v(" "),t("li",[s._v("webpack 每次编译后，会生成一个Hash值，Hash 代表每一次编译的标识。本次输出的 Hash 值会编译新生成的文件标识，被作为下次热更新的标识")]),s._v(" "),t("li",[s._v("webpack监听文件变化（主要是通过文件的生成时间判断是否有变化），当文件变化后，重新编译")]),s._v(" "),t("li",[s._v("编译结束后，通知浏览器请求变化的资源，同时将新生成的 hash 值传给浏览器，用于下次热更新使用")]),s._v(" "),t("li",[s._v("浏览器拿到更新后的模块后，用新模块替换掉旧的模块，从而实现了局部刷新")])]),s._v(" "),t("h1",{attrs:{id:"vite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[s._v("#")]),s._v(" vite")]),s._v(" "),t("h2",{attrs:{id:"vite原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite原理"}},[s._v("#")]),s._v(" vite原理")]),s._v(" "),t("ul",[t("li",[s._v("Vite 利用浏览器支持原生的es module模块，开发时跳过打包的过程，提升编译效率")]),s._v(" "),t("li",[s._v("当通过 import 加载资源时，浏览器会发出 HTTP 请求对应的文件，Vite拦截到该请求，返回对应的模块文件")])]),s._v(" "),t("h2",{attrs:{id:"与webpack的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与webpack的区别"}},[s._v("#")]),s._v(" 与webpack的区别")]),s._v(" "),t("ul",[t("li",[s._v("Webpack 会先打包，然后启动开发服务器，请求服务器时直接给予打包结果。")]),s._v(" "),t("li",[s._v("Vite 是直接启动开发服务器，请求哪个模块再对该模块进行实时编译。\n"),t("ul",[t("li",[s._v("由于现代浏览器本身就支持 ES Module，会自动向依赖的 Module 发出请求。\nVite 充分利用了这一点，将开发环境下的模块文件，就作为浏览器要执行的文件，而不是像 W ebpack 那样进行打包合并。")]),s._v(" "),t("li",[s._v("由于 Vite 在启动的时候不需要打包，也就意味着不需要分析模块的依赖、不需要编译。因此启动速度非常快。当浏览器请求某个模块时，再根据需要对模块内容进行编译。")]),s._v(" "),t("li",[s._v("这种按需动态编译的方式，极大的缩减了编译时间，项目越复杂、模块越多，vite 的优势越明显。")]),s._v(" "),t("li",[s._v("在 HMR（热更新）方面，当改动了一个模块后，仅需让浏览器重新请求该模块即可，不像webpack那样需要把该模块的相关依赖模块全部编译一次，效率更高。")])])]),s._v(" "),t("li",[s._v("缺点\n"),t("ul",[t("li",[s._v("首屏\n"),t("ul",[t("li",[s._v("不对源文件做合并捆绑操作，导致大量的 http 请求；")]),s._v(" "),t("li",[s._v("dev server 运行期间对源文件做 resolve、load、transform、parse 操作；")]),s._v(" "),t("li",[s._v("预构建、二次预构建操作也会阻塞首屏请求，直到预构建完成为止；")])])]),s._v(" "),t("li",[s._v("懒加载")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);